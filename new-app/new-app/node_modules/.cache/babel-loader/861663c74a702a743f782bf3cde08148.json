{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-project\\\\new-app\\\\new-app\\\\src\\\\component\\\\Signup.js\";\nimport React from 'react';\nimport { Formik, Form, validateYupSchema } from 'formik';\nimport { Textfield } from './Textfield';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Signup = () => {\n  const validate = Yup.object({\n    firstname: Yup.string().max(\"must be 15 character or less\").required(\"Required\"),\n    lastname: Yup.string().max(\"not more than 15\").required(\"Required\"),\n    email: Yup.string().email(\"Invalid mail format\").required(\"Required\")\n  });\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      firstname: \"\",\n      lastname: \"\",\n      email: \"\",\n      password: \"\",\n      confirmpassword: \"\"\n    },\n    validate: values => {\n      const errors = {};\n\n      if (!values.email) {\n        errors.email = 'Required';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n        errors.email = 'Invalid email address';\n      }\n\n      return errors;\n    },\n    onSubmit: (values, _ref) => {\n      let {\n        setSubmitting\n      } = _ref;\n      setTimeout(() => {\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 400);\n    },\n    children: _ref2 => {\n      let {\n        isSubmitting\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          type: \"email\",\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"password\",\n          name: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"password\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 10\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_c = Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["D:/react-project/new-app/new-app/src/component/Signup.js"],"names":["React","Formik","Form","validateYupSchema","Textfield","Yup","Signup","validate","object","firstname","string","max","required","lastname","email","password","confirmpassword","values","errors","test","setSubmitting","setTimeout","alert","JSON","stringify","isSubmitting"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,iBAAvB,QAAgD,QAAhD;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAEA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAEC,OAAO,MAAMC,MAAM,GAAC,MAAM;AAEvB,QAAMC,QAAQ,GAACF,GAAG,CAACG,MAAJ,CAAW;AACtBC,IAAAA,SAAS,EAACJ,GAAG,CAACK,MAAJ,GACTC,GADS,CACL,8BADK,EAETC,QAFS,CAEA,UAFA,CADY;AAItBC,IAAAA,QAAQ,EAACR,GAAG,CAACK,MAAJ,GAAaC,GAAb,CAAiB,kBAAjB,EAAqCC,QAArC,CAA8C,UAA9C,CAJa;AAKtBE,IAAAA,KAAK,EAACT,GAAG,CAACK,MAAJ,GAAaI,KAAb,CAAmB,qBAAnB,EAA0CF,QAA1C,CAAmD,UAAnD;AALgB,GAAX,CAAf;AASA,sBACI,QAAC,MAAD;AACD,IAAA,aAAa,EAAE;AACdH,MAAAA,SAAS,EAAC,EADI;AAEdI,MAAAA,QAAQ,EAAC,EAFK;AAGdC,MAAAA,KAAK,EAAC,EAHQ;AAIdC,MAAAA,QAAQ,EAAC,EAJK;AAKdC,MAAAA,eAAe,EAAC;AALF,KADd;AASD,IAAA,QAAQ,EAAEC,MAAM,IAAI;AAClB,YAAMC,MAAM,GAAG,EAAf;;AACA,UAAI,CAACD,MAAM,CAACH,KAAZ,EAAmB;AACjBI,QAAAA,MAAM,CAACJ,KAAP,GAAe,UAAf;AACD,OAFD,MAEO,IACL,CAAC,2CAA2CK,IAA3C,CAAgDF,MAAM,CAACH,KAAvD,CADI,EAEL;AACAI,QAAAA,MAAM,CAACJ,KAAP,GAAe,uBAAf;AACD;;AACD,aAAOI,MAAP;AACD,KAnBA;AAoBD,IAAA,QAAQ,EAAE,CAACD,MAAD,WAA+B;AAAA,UAAtB;AAAEG,QAAAA;AAAF,OAAsB;AACvCC,MAAAA,UAAU,CAAC,MAAM;AACfC,QAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeP,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACAG,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD,OAHS,EAGP,GAHO,CAAV;AAID,KAzBA;AAAA,cA2BA;AAAA,UAAC;AAAEK,QAAAA;AAAF,OAAD;AAAA,0BACC,QAAC,IAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,IAAI,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,OAAnB;AAA2B,UAAA,SAAS,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,IAAI,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,UAAnB;AAA8B,UAAA,SAAS,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,QAAQ,EAAEA,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AAAA;AA3BA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyCH,CApDO;KAAMnB,M","sourcesContent":["import React from 'react'\r\n\r\nimport { Formik, Form, validateYupSchema } from 'formik'\r\nimport {Textfield} from './Textfield'\r\n\r\nimport * as Yup from 'yup';\r\n\r\n export const Signup=() => {\r\n    \r\n    const validate=Yup.object({\r\n        firstname:Yup.string()\r\n        .max(\"must be 15 character or less\")\r\n        .required(\"Required\"),\r\n        lastname:Yup.string().max(\"not more than 15\").required(\"Required\"),\r\n        email:Yup.string().email(\"Invalid mail format\").required(\"Required\"),\r\n    })\r\n    \r\n\r\n    return (\r\n        <Formik\r\n       initialValues={{\r\n        firstname:\"\",\r\n        lastname:\"\",\r\n        email:\"\",\r\n        password:\"\",\r\n        confirmpassword:\"\"\r\n\r\n    } }\r\n       validate={values => {\r\n         const errors = {};\r\n         if (!values.email) {\r\n           errors.email = 'Required';\r\n         } else if (\r\n           !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n         ) {\r\n           errors.email = 'Invalid email address';\r\n         }\r\n         return errors;\r\n       }}\r\n       onSubmit={(values, { setSubmitting }) => {\r\n         setTimeout(() => {\r\n           alert(JSON.stringify(values, null, 2));\r\n           setSubmitting(false);\r\n         }, 400);\r\n       }}\r\n     >\r\n       {({ isSubmitting }) => (\r\n         <Form>\r\n           <Field type=\"email\" name=\"email\" />\r\n           <ErrorMessage name=\"email\" component=\"div\" />\r\n           <Field type=\"password\" name=\"password\" />\r\n           <ErrorMessage name=\"password\" component=\"div\" />\r\n           <button type=\"submit\" disabled={isSubmitting}>\r\n             Submit\r\n           </button>\r\n         </Form>\r\n       )}\r\n     </Formik>\r\n    )\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}